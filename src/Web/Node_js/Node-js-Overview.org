#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: Node.js Overview
#+OPTIONS: num:nil H:2

* Tutorials[fn:1]
+ [[http://nodeschool.io/][NodeSchool.io interactive lessons]]
+ [[https://github.com/maxogden/art-of-node/#the-art-of-node][The Art of Node (an introduction to Node)]]
+ [[http://www.nodebeginner.org/#hello-world][Hello World]]
+ [[http://www.nodebeginner.org/#building-the-application-stack][Hello World Web Server]]
+ [[http://nodeguide.com/][Node.js guide]]
+ [[http://howtonode.org/express-mongodb][Build a blog with Node.js, express and mongodb]]
+ [[http://project70.com/][Node.Js Tutorials At Project 70]]
+ [[http://net.tutsplus.com/tutorials/javascript-ajax/node-js-for-beginners/][Node.js for Beginners]]
+ [[http://javascriptissexy.com/learn-node-js-completely-and-with-confidence/][Learn Node.js Completely and with Confidence]]

* Developer Sites
+ [[http://www.joyent.com/developers/node][Joyent's developer site for node]]
* Videos
+ [[http://nodetuts.com/][Node tuts]]
+ [[http://www.youtube.com/watch?v=jo_B4LTHi3I][Introduction to Node.js with Ryan Dahl]]
+ [[http://www.infoq.com/presentations/nodejs][Node.js: Asynchronous Purity Leads to Faster Development]]
+ [[http://www.infoq.com/presentations/Parallel-Programming-with-Nodejs][Parallel Programming with Node.js]]
+ [[http://vimeo.com/18077379][Server-side JavaScript with Node, Connect & Express]]
+ [[http://www.lynda.com/Nodejs-tutorials/Nodejs-First-Look/101554-2.html][Node.js First Look]]
+ [[http://www.youtube.com/watch?v=0_GNHWZHc-o][Node.js with MongoDB]]
+ [[http://www.youtube.com/watch?v=F6k8lTrAE2g][Ryan Dahl's Google Tech Talk]]
+ [[http://node.codeschool.com/levels/1][Real Time Web with Node.js]]

* Screencasts
+ [[http://learnallthenodes.com/][Learn All The Nodes]]
+ [[http://nodetuts.com/][NodeTuts]]
+ [[http://nodecasts.net/][NodeCasts]]

* Books
+ [[http://nodebeginner.org/][The Node Beginner Book]]
+ [[http://visionmedia.github.com/masteringnode/][Mastering Node.js]]
+ [[http://chimera.labs.oreilly.com/books/1234000001808/index.html][Up and Running with Node.js]]
+ [[http://www.manning.com/cantelon/][Node.js in Action]]
+ [[http://amzn.com/B008Z5OEUY][Smashing Node.js: JavaScript Everywhere]]
+ [[http://www.amazon.de/dp/389864829X][Node.js & Co. (in German)]]
+ [[http://nodejsbook.io/][Sam's Teach Yourself Node.js in 24 Hours]]
+ [[http://jsbooks.revolunet.com/][Most detailed list of free JavaScript Books]]
+ [[http://book.mixu.net/node/index.html][Mixu's Node Book]]
+ [[http://pragprog.com/book/jwnode/node-js-the-right-way][Node.js the Right Way: Practical, Server-Side JavaScript That Scale]]
+ [[https://leanpub.com/webdevelopmentwithnodejs][Beginning Web Development with Node.js]]
+ [[http://www.packtpub.com/node-javascript-web-development/book][Node Web Development]]

* Courses
+ [[http://node.codeschool.com/][Real Time Web with Node.js]]

* Blogs
+ [[http://blog.nodejs.org/][The Node.js blog]]
+ [[http://howtonode.org/][How To Node]]
+ [[http://dailyjs.com/][DailyJS]]
+ [[http://blog.nodejitsu.com/][Nodejitsu blog]]
+ [[http://www.wilcoxd.com/whitepapers/node_js/][Ryan Wilcox's Whitepaper]]
+ [[http://www.devthought.com/][devthought]]

* Podcasts
+ [[http://nodeup.com/][NodeUp]]

* JavaScript resources
+ [[http://yuiblog.com/crockford/][Crockford's videos]] (must see!)
+ [[http://www.addyosmani.com/resources/essentialjsdesignpatterns/book/][Essential JavaScript Design Patterns For Beginners]]
+ [[http://bonsaiden.github.com/JavaScript-Garden/][JavaScript garden]]
+ [[http://oreilly.com/catalog/9780596806767][JavaScript Patterns book]]
+ [[http://oreilly.com/catalog/9780596517748/][JavaScript: The Good Parts book]]

* Node Modules
+ [[http://npmjs.org/][Search for registered node.js modules]]
+ [[https://github.com/joyent/node/wiki/modules][Wiki List on Github/Joyent/Node]] (start here last!)
+ [[http://www.freshblurbs.com/articles/important-node-js-modules.html][A completely biased and incomplete selection of useful Node modules]]

* Other
+ [[http://jsapp.us/][JSApp.US - like jsfiddle, but for node.js]]
+ [[https://www.ebayopensource.org/index.php/VJET/NodeJS][Node with VJET JS (for Eclipse IDE)]]
+ [[http://nodeknockout.com/][Node Knockout Hackathon (source)]]
+ [[http://coding.smashingmagazine.com/2011/09/16/useful-node-js-tools-tutorials-and-resources/][Useful Node.js Tools, Tutorials and Resources]]
+ [[http://runnable.com/][Runnable.com - like jsfiddle, but for server side as well]]

* Useful Tools for Every Project:
+ [[http://documentcloud.github.com/underscore/][Underscore]] contains just about every core utility method you want.
+ [[http://coffeescript.org/][CoffeeScript]] makes JavaScript considerably more bearable, while also
  keeping you out of trouble! Caveat: A large portion of the community
  frowns upon it. If you are writing a library, you should consider
  regular JavaScript, to benefit from wider collaboration. 

* Unit Testing:
+ [[http://visionmedia.github.io/mocha/][Mocha]] is a popular test framework.
+ [[http://vowsjs.org/][Vows]] is a fantastic take on asynchronous testing, albeit somewhat stale.
+ [[http://visionmedia.github.com/expresso/][Expresso]] is a more traditional unit testing framework.
+ [[https://github.com/caolan/nodeunit][node-unit]] is another relatively traditional unit testing framework.

* Web Frameworks:
+ [[http://expressjs.com/][Express]] is by far the most popular framework.
+ [[http://www.meteor.com/][Meteor]] bundles together jQuery, Handlebars, Node.js, websockets, mongoDB, and DDP and promotes convention over configuration without being a Rails clone.
+ [[http://towerjs.org/][Tower]] is an abstraction of top of Express that aims to be a Rails clone.
Geddy is another take on web frameworks.
RailwayJS is a Ruby-on-Rails inspired MVC web framework.
SailsJS is a realtime MVC web framework.
Sleek.js is a simple web framework, built upon express.js.
Hapi is a configuration-centric framework with built-in support for input validation, caching, authentication, etc.
Koa Koa is a new web framework designed by the team behind Express, which aims to be a smaller, more expressive, and more robust foundation for web applications and APIs.

* Web Framework Tools:
+ [[https://github.com/visionmedia/jade][Jade]] is the HAML/Slim of the Node world
+ [[https://github.com/visionmedia/ejs][EJS]] is a more traditional templating language.
+ Don't forget about [[http://documentcloud.github.com/underscore/#template][Underscore's template method!]]

* Networking:
+ [[http://www.senchalabs.org/connect/][Connect]] is the Rack or WSGI of the Node world.
+ [[https://github.com/mikeal/request][Request]] is a very popular HTTP request library.
+ [[https://github.com/LearnBoost/socket.io][socket.io]] is handy for building WebSocket servers.

* Command Line Interaction:
+ [[https://github.com/substack/node-optimist][Optimist]] makes argument parsing a joy.
+ [[https://github.com/visionmedia/commander.js][Commander]] is another popular argument parser.
+ [[https://github.com/Marak/colors.js][Colors]] makes your CLI output pretty.

* r

http://nodeguide.com/beginner.html

http://www.nodebeginner.org/#hello-world

http://nodeschool.io/#learn-you-node

http://howtonode.org/express-mongodb


* node.js
http://stackoverflow.com/questions/11311672/building-a-website-using-node-js-best-practice

http://stackoverflow.com/questions/4582376/examples-of-coffeescript-in-nodejs

http://nickdesaulniers.github.io/blog/2013/08/28/making-great-node-dot-js-modules-with-coffeescript/

* ubuntu install
#+begin_src sh
sudo apt-get --purge remove node
sudo apt-get --purge remove nodejs
sudo apt-get install nodejs
sudo ln -s /usr/bin/nodejs /usr/bin/node
#+end_src
* Footnotes

[fn:1] http://stackoverflow.com/questions/2353818/how-do-i-get-started-with-node-js

