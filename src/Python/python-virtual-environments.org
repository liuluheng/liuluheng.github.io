#+SETUPFILE: ~/.emacs.d/src/org-templates/level-1.org
#+TITLE: Python Virtual Environments
#+OPTIONS: num:nil H:2

Python虚拟环境可以在独立的地方保持针对不同的工程的依赖需求,通过为它们创建虚
拟Python环境.它解决这样的困境,"工程X以来版本1.x,但是工程Y需要4.x".并且
你的全局site-packages整洁可控.

* virtualenv
[[https://pypi.python.org/pypi/virtualenv][virtualenv]] is a tool to create isolated Python environments. 

** install via pip
#+begin_src sh
$ sudo pip install virtualenv
#+end_src

** Basic Usage
*** Create a virtual environment for a project
Creates a copy of Python in whichever directory you ran the command
in, placing it in a folder named =venv=.
#+begin_src sh
$ cd my_project_folder
$ virtualenv venv
#+end_src

*** use a Python interpreter
use the Python interpreter in /usr/bin/python2.7
#+begin_src sh
$ virtualenv -p /usr/bin/python2.7 venv
#+end_src

*** activate the virtual environment
#+begin_src sh
$ source venv/bin/activate
#+end_src
The name of the current virtual environment will now appear on the
left of the prompt (e.g. (=venv)Your-Computer:your_project UserName$=)
to let you know that it’s active.

*** deactivate
#+begin_src sh
$ deactivate
#+end_src

*** delete a virtual environment
delete its folder
#+begin_src sh
rm -rf venv
#+end_src

** Misc
***  “freeze” the current state of the environment packages
#+begin_src sh
$ pip freeze > requirements.txt
#+end_src
*** re-create the environment
#+begin_src sh
$ pip install -r requirements.txt
#+end_src
* virtualenvwrapper
[[http://virtualenvwrapper.readthedocs.org/en/latest/index.html][virtualenvwrapper]] provides a set of commands which makes working with
virtual environments much more pleasant.
** install
#+begin_src sh
$ sudo pip install virtualenvwrapper
$ export WORKON_HOME=~/Envs
$ mkdir -p $WORKON_HOME
$ source /usr/local/bin/virtualenvwrapper.sh
#+end_src
** add env to .bashrc
#+begin_src sh
export WORKON_HOME=~/Envs
source /usr/local/bin/virtualenvwrapper.sh
#+end_src
** Basic Usage
*** Create a virtual environment
This creates the venv folder inside ~/Envs.
#+begin_src sh
$ mkvirtualenv env1
#+end_src
*** Work on a virtual environment
#+begin_src sh
workon venv
#+end_src
*** Deactivating
#+begin_src sh
$ deactivate
#+end_src
*** Delete
#+begin_src sh
$ rmvirtualenv venv
#+end_src
** More

+ =lsvirtualenv=
  List all of the environments.
+ =cdvirtualenv=
  Navigate into the directory of the currently activated virtual
  environment.
+ =cdsitepackages=
  Navigate into currently activated site-packages directory.
+ =lssitepackages=
  Shows contents of site-packages directory.

[[http://virtualenvwrapper.readthedocs.org/en/latest/command_ref.html][Full commands]].
* autoenv
When you cd into a directory containing a .env, [[https://github.com/kennethreitz/autoenv][autoenv]] automagically
activates the environment.

#+begin_src sh
$ git clone git://github.com/kennethreitz/autoenv.git ~/.autoenv
$ echo 'source ~/.autoenv/activate.sh' >> ~/.bashrc
#+end_src
