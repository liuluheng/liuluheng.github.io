#+SETUPFILE: ~/.emacs.d/src/org-templates/level-2.org
#+TITLE: Git and Github Overview
#+OPTIONS: num:nil H:2


* Git cheat sheets
+ http://cheat.errtheblog.com/s/git/
+ Git and GitHub hidden features:
  https://github.com/tiimgreen/github-cheat-sheet
* Books
+ Pro Git -- a full book on using git, written by Scott Chacon and
  published by Apress. Available for free in several formats.
  http://git-scm.com/book
+ Pragmatic Version Control Using Git
  http://www.pragprog.com/titles/tsgit/pragmatic-version-control-using-git

+ Git Internals Peepcode	http://peepcode.com/products/git-internals-pdf
+ Git in the Trenches	http://cbx33.github.com/gitt/
+ Pragmatic Guide to Git
  http://www.pragprog.com/titles/pg_git/pragmatic-guide-to-git
+ Git: Version Control for Everyone
  http://www.packtpub.com/git-version-control-for-everyone/book

* Tutorial
+ http://think-like-a-git.net/
+ A Visual Git Reference
  http://marklodato.github.com/visual-git-guide/index-en.html
+ Git Immersion - a good place to start http://gitimmersion.com/
+ git Manpage - the official git manual. Can be a little dry.
  https://www.kernel.org/pub/software/scm/git/docs/
+ GitRef -- a helpful quick reference guide for common git commands.
  http://gitref.org/
+ Code School -- basic concepts of git version control
  http://www.codeschool.com/courses/try-git
+ Understanding git conceptually
  http://www.sbf5.com/~cduan/technical/git/
+ Ry's Git Tutorial	http://rypress.com/tutorials/git/index.html
+ Git for Designer	http://hoth.entp.com/output/git_for_designers.html
+ Git for Computer Scientists
  http://eagain.net/articles/git-for-computer-scientists/
+ Git Magic	http://www-cs-students.stanford.edu/~blynn/gitmagic
+ [[http://nvie.com/posts/a-successful-git-branching-model/][A Successful Branching Model]]
* Git Userâ€™s Manual 
http://www.kernel.org/pub/software/scm/git/docs/user-manual.html
* Everyday GIT With 20 Commands Or So
http://www.kernel.org/pub/software/scm/git/docs/everyday.html

* GitHub
+ Git and GitHub hidden features:
  https://github.com/tiimgreen/github-cheat-sheet
+ [[http://docs.travis-ci.com/user/getting-started/][Travis CI]]: Travis CI is a hosted continuous integration service.
+ Use Github's issue tracker
+ Use Github's [[https://help.github.com/articles/using-pull-requests/][Pull Request]] and [[http://cesium.agi.com/2013/10/08/GitHub-Pull-Request-Workflows/][Pull Request Workflows]] by Patrick
  Cozzi
** Extras
+ [[https://help.github.com/articles/about-git-rebase/][Interactive Rebase]]
+ Need to merge multiple repos (e.g. using datavore in another
  project)? Use [[https://help.github.com/articles/about-git-subtree-merges/][git subtree]] and DO NOT use [[http://ayende.com/blog/4746/the-problem-with-git-submodules][git submodule]].
** More Tips
+ [[http://en.wikipedia.org/wiki/Atomic_commit][Atomic Commit]] is a good practice.
+ [[http://git-scm.com/book/en/Git-Tools-Stashing][Stash]] is useful when you have unfinished messy things and need to
  switch branches to work on something else.



