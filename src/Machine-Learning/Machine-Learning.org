#+SETUPFILE: ~/.emacs.d/src/org-templates/level-1.org
#+TITLE: Machine Learning
#+OPTIONS: num:nil H:2

* Courses
** Course CS229
*** Sites
**** course
a watered-down version: https://www.coursera.org/course/ml

original class: https://www.youtube.com/watch?v=UzxYlbK2c7E
**** Course Materials
http://cs229.stanford.edu/materials.html
**** homepage
http://see.stanford.edu/see/courseinfo.aspx?coll=348ca38a-3a6d-4052-937d-cb017338d7b1
**** Assignments
http://see.stanford.edu/see/materials/aimlcs229/assignments.aspx
*** Course Notes
**** Lecture 1
1. Supervised 

2. Unsupervised

3. Reinforcement Learning

** Caltech course Learning From Data
A real Caltech course, not a watered-down version:
http://work.caltech.edu/telecourse.html
*** Notes

** Scientific Computing
https://www.coursera.org/course/scientificcomp

* Competitions
** kaggle
http://www.kaggle.com/competitions

* Books
** 16 Free eBooks On Machine Learning[fn:1]
1. The LION Way: Machine Learning plus Intelligent Optimization
   http://www.e-booksdirectory.com/details.php?ebook=9575

2. A Course in Machine Learning http://www.e-booksdirectory.com/details.php?ebook=9395

3. A First Encounter with Machine Learning http://www.e-booksdirectory.com/details.php?ebook=8818

4. Bayesian Reasoning and Machine Learning http://www.e-booksdirectory.com/details.php?ebook=5283

5. Introduction to Machine Learning http://www.e-booksdirectory.com/details.php?ebook=4493

6. The Elements of Statistical Learning: Data Mining, Inference, and Prediction http://www.e-booksdirectory.com/details.php?ebook=3267

7. Reinforcement Learning by C. Weber, M. Elshaw, N. M. Mayer http://www.e-booksdirectory.com/details.php?ebook=3227

8. Machine Learning by Abdelhamid Mellouk, Abdennacer Chebira http://www.e-booksdirectory.com/details.php?ebook=2852

9. How Are We To Know? by Nils J. Nilsson http://www.e-booksdirectory.com/details.php?ebook=2710

10. Reinforcement Learning: An Introduction http://www.e-booksdirectory.com/details.php?ebook=1825

11. Gaussian Processes for Machine Learning http://www.e-booksdirectory.com/details.php?ebook=1774

12. Machine Learning, Neural and Statistical Classification http://www.e-booksdirectory.com/details.php?ebook=1118

13. Introduction To Machine Learning http://www.e-booksdirectory.com/details.php?ebook=1117

14. Inductive Logic Programming: Techniques and Applications http://www.e-booksdirectory.com/details.php?ebook=1105

15. Practical Artificial Intelligence Programming in Java http://www.e-booksdirectory.com/details.php?ebook=32

16. Information Theory, Inference, and Learning Algorithms
    http://www.e-booksdirectory.com/details.php?ebook=21

** Machine Learning: An Algorithmic Perspective" by Stephen Marsland
http://seat.massey.ac.nz/personal/s.r.marsland/MLBook.html

* Lib

** Deep Learning
+ [[http://deeplearning.net/software/theano/][Theano]] is the most mature of deep learning library. It provides nice
  data structures (tensors) to represent layers of neural networks and
  they are efficient in terms of linear algebra similar to Numpy
  arrays. There are a lot of [[https://github.com/Theano/Theano/wiki/Related-projects][libraries]] which build on top of Theano
  exploiting its data structures.
+ [[http://deeplearning.net/software/pylearn2/][PyLearn2]] is another library built on top of Theano.
+ [[http://caffe.berkeleyvision.org/][Caffe]] is a deep learning framework developed with cleanliness,
  readability, and speed in mind.
+ [[https://pythonhosted.org/nolearn/][nolearn]] contains a number of wrappers around existing neural network
  libraries, along with a few machine learning utility modules. Most
  functionality is written to be compatible with the the excellent
  scikit-learn library.
+ [[https://github.com/sermanet/OverFeat][OverFeat]] is a Convolutional Network-based image classifier and
  feature extractor. which is written in C++ but it comes with a
  Python wrapper as well(along with Matlab and Lua). It uses GPU
  through Torch library so it is quite fast.
+ [[https://github.com/hannes-brt/hebel][Hebel]] is another neural network library comes along with GPU support
  out of the box. You could determine the properties of your neural
  networks through YAML files(similar to Pylearn2) which provides a
  nice way to separate your neural network from the code and quickly
  run your models.
+ [[https://code.google.com/p/neurolab/][NeuroLab]] is another neural network library which has nice
  api(similar to Matlab’s api if you are familiar) It has different
  variants of Recurrent Neural Network(RNN) implementation unlike
  other libraries. 








** Python
+ [[http://www.scipy.org/][SciPy]]  is a Python-based ecosystem of open-source software for
  mathematics, science, and engineering. In particular,
+ [[https://code.google.com/p/scipy-cluster/][scipy-cluster]] An extension to Scipy for generating, visualizing, and
  analyzing hierarchical clusters.
+ [[http://orange.biolab.si/][orange]] Open source data visualization and analysis for novice and
  experts. Data mining through visual programming or Python scripting.
+ [[http://scikit-learn.org/][Scikit-learn]]: comprehensive and easy to use.

+ [[https://github.com/EducationalTestingService/skll][SciKit-Learn Laboratory]] provides command-line utilities to make it
  easier to run machine learning experiments with scikit-learn. One of
  the primary goals of our project is to make it so that you can run
  scikit-learn experiments without actually needing to write any code
  other than what you used to generate/extract the features.

+ [[http://pybrain.org/][PyBrain]]: Neural networks are one thing that are missing from
  SciKit-learn, but this module makes up for it.
+ [[http://nltk.org/][nltk]]: really useful if you’re doing anything NLP or text mining
  related.
+ [[http://www.deeplearning.net/software/theano/][Theano]]: efficient computation of mathematical expressions using GPU.
  Excellent for deep learning.
+ [[http://deeplearning.net/software/pylearn2/][Pylearn2]]: machine learning toolbox built on top of Theano - in very
  early stages of development.
+ [[http://mdp-toolkit.sourceforge.net/][MDP]] (Modular toolkit for Data Processing): a framework that is
  useful when setting up workflows.
+ [[https://code.google.com/p/java-statistical-analysis-tool/][JSAT]] stands for “Java Statistical Analysis Tool” - created by
  Edward Raff and was born out of his frustation with Weka.
+ [[http://elefant.developer.nicta.com.au/][Elefant]] toolkit that includes kernel methods, optimization
  strategies and belief propagation. Elefant is developed by the ADA
  (Automated Data Analysis) group at NiCTA, Australia.
+ [[https://pythonhosted.org/milk/][Milk]] toolkit for python that includes SVMs, decision trees, kNN,
  PCA, Kmeans, NMF and feature selection
+ [[http://code.google.com/p/peach/][Peach]] is a pure-python module, based on SciPy and NumPy to implement
  algorithms for computational intelligence and machine learning.
  Methods implemented include, but are not limited to, artificial
  neural networks, fuzzy logic, genetic algorithms, swarm intelligence
  and much more.
+ [[http://code.google.com/p/pebl-project/][Pebl]] is a python library and command line application for learning
  the structure of a Bayesian network given prior knowledge and
  observations. 
+ [[http://dev.pymvpa.org/][PyMVPA]]: python module including more classifiers, regression and
  feature selection methods than can be listed here.
+ [[http://montepython.sourceforge.net/][Monte (python)]] is a Python framework for building gradient based
  learning machines, like neural networks, conditional random fields,
  logistic regression, etc. Monte contains modules (that hold
  parameters, a cost-function and a gradient-function) and trainers
  (that can adapt a module's parameters by minimizing its
  cost-function on training data).
+ [[http://mlpy.sourceforge.net/][mlpy]] - Python module that includes Wavelet transforms, Kernel
  methods, FDA, PDA, LASSO, LARS, feature selection and ranking and
  data management. Very clean interface.
+ [[http://mdp-toolkit.sourceforge.net/index.html][Modular toolkit for Data Processing]] - Python toolkit for data
  processing. In my opinion the API needs a little getting used to.
  Includes PCA, Kmeans, RMBs, FastICA, Neural Gas, SVms, Perceptrons
  and many more.
+ [[http://pyml.sourceforge.net/][PyML]] is an interactive object oriented framework for machine
  learning written in Python. PyML focuses on SVMs and other kernel
  methods.
+ [[http://pymc-devs.github.io/pymc/README.html][PyMC]] is a python module that implements Bayesian statistical models
  and fitting algorithms, including Markov chain Monte Carlo.
+ [[https://github.com/kvh/ramp][Ramp]] - Rapid Machine Learning Prototyping
+ [[https://wiki.python.org/moin/PythonForArtificialIntelligence][PythonForArtificialIntelligence]] attempts to collect information and
  links pertaining to the practice of AI and Machine Learning in
  python.
+ [[http://statsmodels.sourceforge.net/][Statsmodels]] is a Python module that allows users to explore data,
  estimate statistical models, and perform statistical tests. An
  extensive list of descriptive statistics, statistical tests,
  plotting functions, and result statistics are available for
  different types of data and each estimator.
+ [[http://radimrehurek.com/gensim/][Gensim]] is defined as “topic modeling for humans”. As its homepage
  describes, its main focus is Latent Dirichlet Allocation (LDA) and
  its variants.
+ [[http://ffnet.sourceforge.net/][ffnet]] is a fast and easy-to-use feed-forward neural network training
  solution for python.
*** Python integration with other languages
+ R -> [[http://rpython.r-forge.r-project.org/][RPython]]
+ Matlab -> [[http://algoholic.eu/matpy/][matpython]]
+ Java -> [[http://www.jython.org/jythonbook/en/1.0/JythonAndJavaIntegration.html][Jython]]
+ Lua -> [[http://labix.org/lunatic-python][Lunatic Python]]
+ Julia -> [[https://github.com/stevengj/PyCall.jl][PyCall.jl]]
** Java
+ [[http://spark.apache.org/][Spark]] is a fast and general engine for large-scale data processing,
  includes MLLib, which contains a good selection of machine learning
  algorithms, including classification, clustering and recommendation
  generation. Currently undergoing rapid development. Development can
  be in Python as well as JVM languages.
+ [[http://www.cs.waikato.ac.nz/ml/weka/][Weka]] is a collection of machine learning algorithms for data mining
  tasks.
+ [[https://mahout.apache.org/][Mahout]]: Apache’s machine learning framework built on top of Hadoop,
  this looks promising, but comes with all the baggage and overhead of
  Hadoop.
+ [[http://mallet.cs.umass.edu/][MALLET]] is a Java-based package for statistical natural language
  processing, document classification, clustering, topic modeling,
  information extraction, and other machine learning applications to
  text.
** C/C++
+ [[https://github.com/JohnLangford/vowpal_wabbit][Vowpal Wabbit]]:  is the vowpal wabbit fast online learning code.
+ [[http://www.multiboost.org/][MultiBoost]] is a multi-class / multi-label / multi-task
  classification boosting software implemented in C++. 
+ [[http://image.diku.dk/shark/sphinx_pages/build/html/index.html][SHARK]] is a fast, modular, feature-rich open-source C++ machine
  learning library.
+ [[http://waffles.sourceforge.net/][Waffles]]: A machine learning toolkit.
+ [[http://dlib.net/][Dlib]] is a general purpose cross-platform C++ library designed using
  contract programming and modern C++ techniques.
+ [[http://sourceforge.net/projects/plearn/][PLearn]] is a C++ library aimed at research and development in the
  field of statistical machine learning algorithms.
+ [[http://www.sgi.com/tech/mlc/][MLC++]] is a library of C++ classes for supervised machine learning. 
+ [[http://mlpack.org/][mlpack]] a scalable c++ machine learning library
+ [[http://www.csie.ntu.edu.tw/~cjlin/libsvm/][LIBSVM]] A Library for Support Vector Machines. Both C++ and Java
  sources.
+ [[http://www.csie.ntu.edu.tw/~cjlin/liblinear/][LibLinear]] A Library for Large Linear Classification
+ [[http://bonsai.hgc.jp/~mdehoon/software/cluster/software.htm][Cluster]] implement the most commonly used clustering methods for gene
  expression data analysis. 
+ [[http://www.shogun-toolbox.org/][SHOGUN]] is designed for unified large-scale learning for a broad
  range of feature types and learning settings, like classification,
  regression, or explorative data analysis.
+ [[http://www.cs.washington.edu/dm/vfml/][VFML]] (Very Fast Machine Learning) toolkit for mining high-speed data
  streams and very large data sets.  VFML is written in standard C
  (and a bit of Python).
+ [[http://leon.bottou.org/projects/sgd][Stochastic Gradient Descent]] library for SVMs with stochastic
  gradient descent (C++)
+ [[http://homepages.inf.ed.ac.uk/lzhang10/maxent_toolkit.html][Maximum Entropy Modeling Toolkit for Python and C++]]
+ [[http://dbacl.sourceforge.net/][dbacl]] a digramic Bayesian classifier - a collection of command line
  tools for Bayesian classification particularly for spam filtering
** .NET
+ [[http://accord-framework.net/intro.html][Accord.NET]]: this seems to be pretty comprehensive, and comes
  recommended by [[http://www.reddit.com/user/primaryobjects][primaryobjects]] on Reddit.
+ use one of the Java libraries compiled to .NET using [[http://www.ikvm.net/][IKVM]].
* Projects/Software
** word2vec
https://code.google.com/p/word2vec/

** mloss
[[http://www.mloss.org/software/][mloss]]: machine learning open source software.

** GNU/Linux AI & Alife HOWTO
http://zhar.net/howto/html/ai.html#toc7
* Articles
+ Machine Learning is not Black-Box Magic:
  http://alpinenow.com/blog/machine-learning-is-not-black-box-magic/
+ discussion at HN
  https://news.ycombinator.com/item?id=6335092
+ blog
  http://machinelearningmastery.com/

* related things
** Probabilistic Programming
*** sites
http://probabilistic-programming.org/wiki/Home
*** courses
+ Introduction to Probability - The Science of Uncertainty
  https://www.edx.org/course/mitx/mitx-6-041x-introduction-probability-1296
+ Probabilistic Systems Analysis and Applied Probability
  http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-041-probabilistic-systems-analysis-and-applied-probability-fall-2010/index.htm

* Blog
+ http://daoudclarke.github.io/
+ http://metaoptimize.com/
+ [[http://peekaboo-vision.blogspot.hk/][Andy's Computer Vision and Machine Learning Blog]]

* Footnotes

[fn:1] http://efytimes.com/e1/fullnews.asp?edid=121516
